"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _View = _interopRequireDefault(require("./View.js"));

var _icons = _interopRequireDefault(require("url:../../img/icons.svg"));

var _fractional = require("fractional");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class RecipeView extends _View.default {
  parentElement = document.querySelector('.recipe'); // родитель, куда вставляем данные

  errorMessage = `We could not find this recipe. Please try another one!`;
  message = ''; // слушатели событий

  addHandlerRender(handler) {
    const events = ['hashchange', 'load']; // указываем события, при которых будет срабатывать обработчик

    events.forEach(event => window.addEventListener(event, handler)); // вешаем обработчик в цикле
  } // метод генерации выходных данных шаблона


  generateMarkup() {
    return `
          <figure class="recipe__fig">
            <img src="${this.data.image}" alt="${this.data.title}" class="recipe__img" />
            <h1 class="recipe__title">
              <span>${this.data.title}</span>
            </h1>
          </figure>   
    
          <div class="recipe__details">
            <div class="recipe__info">
              <svg class="recipe__info-icon">
                <use href="${_icons.default}#icon-clock"></use>
              </svg>
              <span class="recipe__info-data recipe__info-data--minutes">${this.data.cookingTime}</span>
              <span class="recipe__info-text">minutes</span>
            </div>
            <div class="recipe__info">
              <svg class="recipe__info-icon">
                <use href="${this.icons}#icon-users"></use>
              </svg>
              <span class="recipe__info-data recipe__info-data--people">${this.data.servings}</span>
              <span class="recipe__info-text">servings</span>
    
              <div class="recipe__info-buttons">
                <button class="btn--tiny btn--increase-servings">
                  <svg>
                    <use href="${_icons.default}#icon-minus-circle"></use>
                  </svg>
                </button>
                <button class="btn--tiny btn--increase-servings">
                  <svg>
                    <use href="${_icons.default}#icon-plus-circle"></use>
                  </svg>
                </button>
              </div>
            </div>
    
            <div class="recipe__user-generated">
              <svg>
                <use href="${_icons.default}#icon-user"></use>
              </svg>
            </div>
            <button class="btn--round">
              <svg class="">
                <use href="${_icons.default}#icon-bookmark-fill"></use>
              </svg>
            </button>
          </div>
    
          <div class="recipe__ingredients">
            <h2 class="heading--2">Recipe ingredients</h2>
            <ul class="recipe__ingredient-list">
    
        ${this.data.ingredients.map(this.generateIngredients).join('')}
    
            </ul>
          </div>
    
          <div class="recipe__directions">
            <h2 class="heading--2">How to cook it</h2>
            <p class="recipe__directions-text">
              This recipe was carefully designed and tested by
              <span class="recipe__publisher">${this.data.publisher}</span>. Please check out
              directions at their website.
            </p>
            <a
              class="btn--small recipe__btn"
              href="${this.data.sourceUrl}"
              target="_blank"
            >
              <span>Directions</span>
              <svg class="search__icon">
                <use href="${_icons.default}#icon-arrow-right"></use>
              </svg>
            </a>
          </div>
        `;
  } // метод отображения ингридиентов


  generateIngredients(ing) {
    return `
            <li class="recipe__ingredient">
              <svg class="recipe__icon">
                <use href="${_icons.default}#icon-check"></use>
              </svg>
              <div class="recipe__quantity">${ing.quantity ? new _fractional.Fraction(ing.quantity).toString() : ''}</div>
              <div class="recipe__description">
                <span class="recipe__unit">${ing.unit}</span>
                ${ing.description}
              </div>
            </li>
            `;
  }

}

var _default = new RecipeView(); // экспортируем объект


exports.default = _default;