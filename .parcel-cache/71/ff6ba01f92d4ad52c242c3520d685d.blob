"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.state = exports.loadSearchResults = exports.loadRecipe = void 0;

var _config = require("./config.js");

var _helpers = require("./helpers.js");

/*

Forkify API

Documentstion:  https://forkify-api.herokuapp.com/
Demo: 		https://forkify-api.herokuapp.com/v2

API key		756138d6-8a4b-4b07-9f2c-61a17bc3ace9

*/
// объект для хранения данных о рецепте
const state = {
  recipe: {},
  search: {
    query: '',
    results: []
  }
}; // функция получения рецепта по идентификатору

exports.state = state;

const loadRecipe = async function (id) {
  try {
    // получаем данные
    // getJSON - функция из helpers.js
    // API_URL получаем из файла с конфигом
    const data = await (0, _helpers.getJSON)(`${_config.API_URL}/${id}`); // извлекаем объект с данными в переменную

    const {
      recipe
    } = data.data; // заполняем свойство recipe объекта state полученными данными

    state.recipe = {
      id: recipe.id,
      title: recipe.title,
      publisher: recipe.publisher,
      sourceUrl: recipe.source_url,
      image: recipe.image_url,
      servings: recipe.servings,
      cookingTime: recipe.cooking_time,
      ingredients: recipe.ingredients
    };
  } catch (err) {
    throw err; // пробрасываем ошибку в контроллер 
  }
};

exports.loadRecipe = loadRecipe;

const loadSearchResults = async function () {
  let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'pizza';

  try {
    const data = await (0, _helpers.getJSON)(`${_config.API_URL}?search=${query}&key=756138d6-8a4b-4b07-9f2c-61a17bc3ace9`);
    console.log(data);
    state.search.results = data.data.recipes.map(rec => {
      return {
        id: rec.id,
        title: rec.title,
        publisher: rec.publisher,
        image: rec.image_url
      };
    });
  } catch (err) {
    throw err; // пробрасываем ошибку в контроллер 
  }
};

exports.loadSearchResults = loadSearchResults;
loadSearchResults();